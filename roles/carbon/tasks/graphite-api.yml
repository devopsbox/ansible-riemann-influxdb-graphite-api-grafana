---

- name: Install graphite-api dependencies
  apt: pkg={{item}}
  with_items:
  - libcairo2
  - libcairo-dev
  - libffi5
  - libffi-dev
  - libyaml-dev

- name: Create graphite-api user
  user: name={{graphite_api_user}} home={{graphite_api_home}}

- name: Setup virtualenv
  shell: virtualenv {{graphite_api_home}}/env --python=python creates={{graphite_api_home}}/env/bin/pip
  sudo: yes
  sudo_user: "{{graphite_api_user}}"

- name: Install graphite-api
  pip: name={{item}} executable={{graphite_api_home}}/env/bin/pip
  sudo: yes
  sudo_user: "{{graphite_api_user}}"
  with_items:
  - flask
  - gunicorn
  - graphite-api

#- name: Install whisper
#  pip: name=whisper executable={{graphite_api_home}}/env/bin/pip
#  sudo: yes
#  sudo_user: "{{graphite_api_user}}"
#  when: graphite_api_whisper

- name: Configure graphite-api
  template: owner={{graphite_api_user}} group={{graphite_api_group}} dest={{graphite_api_home}}/config.yml src=config.yml.j2
#  notify: [ graphite-api restart ]

#- name: graphite-api-configure | Setup upstart
#  template: dest=/etc/init/graphite-api.conf src=upstart-api.conf.j2
#  notify: [ graphite-api restart ]
#
#- name: Touch graphite-api index file
#  file: state=touch path={{graphite_api_search_index}} owner={{graphite_api_user}} group={{graphite_api_group}}
#  changed_when: False

- name: Configure nginx graphite-api site
  template: src=nginx-graphite-api.conf.j2 dest={{nginx_dir|default('/etc/nginx')}}/sites-available/graphite-api.conf
  notify: [nginx reload]
  when: nginx_enabled and graphite_api_nginx

- name: Enable nginx graphite-api site
  file: src={{nginx_dir|default('/etc/nginx')}}/sites-available/graphite-api.conf dest={{nginx_dir|default('/etc/nginx')}}/sites-enabled/graphite-api.conf state=link
  when: nginx_enabled and graphite_api_nginx

#- include: carbon.yml
#  tags: [graphite-api, graphite-api-carbon]
#  when: graphite_api_carbon
